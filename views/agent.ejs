<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="fontawesome-free-6.5.2-web/css/all.min.css"> 
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins">
    <link rel="stylesheet" href="/css/agent.css">
    <script src="https://cdn.jsdelivr.net/npm/axios@0.27.2/dist/axios.min.js"></script>
    <title>Find Agent</title>
</head>
<body>
    <%- include('partials/header', { title: title }) %>

    <section id="background">
        <div class="title">
            <h1>A great agent makes all the difference</h1>
        </div>
    </section>
    <section class="sec1">
        <h1>Find an Agent</h1>
        <div class="search-box">
            <div class="first">
                <label>LOCATION</label>
                <div class="location-search">
                    <input type="text" placeholder="City">
                    <label for="search1">
                        <button type="submit" id="search1">Search</button>
                    </label>
                </div>
            </div>
            <div class="second">
                <label for="agent-name">NAME</label>
                <div data-testid="name-search">
                    <input type="text" placeholder="Agent Name" id="agent-name">
                    <label for="search2">
                        <button type="submit" id="search2">Search</button>
                    </label>
                </div>
            </div>
        </div>
    </section>
    <%- include('partials/footer', { title: title }) %>
    <script>
       const apiUrl = 'https://test.api.amadeus.com/v1/reference-data/locations';
        const apiKey = 'zSnT78HaU5vAEd1YSM5uAv8S1hVNfppr';

        async function searchCities(searchQuery) {
        try {
            const headers = {
            'Authorization': `Bearer ${apiKey}`,
            'Content-Type': 'application/json'
            };
            const response = await axios.get(`${apiUrl}`, {
            headers: headers,
            params: {
                subType: 'CITY',
                keyword: searchQuery
            }
            });
            const cityData = response.data.data;
            console.log(cityData);
            
            const cityList = document.getElementById('search1');
            cityList.innerHTML = '';
            cityData.forEach((city) => {
            const cityItem = document.createElement('li');
            cityItem.textContent = city.address.label;
            cityList.appendChild(cityItem);
            });
        } catch (error) {
            console.error(error);
        }
        }

        // Add an event listener to the search input field
        const searchInput = document.getElementById('search-input');
        searchInput.addEventListener('input', (e) => {
        const searchQuery = e.target.value;
        searchCities(searchQuery);
        });
    </script>
</body>
</html>
